scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users: [User!]! @paginate(defaultCount: 10)

    usersByFirstName(
      first_name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    product(
      id: ID @eq
    ): Product @find

    products(
      size: String @eq
    ): [Product!]! @paginate(defaultCount: 50)
}

type Mutation {
  createUser(
    first_name: String!
    last_name: String!
    is_admin: Int!
    email: String!
    password: String!
  ): User @create
}

#est reli√© au model User par NameConvention
type User {
    id: ID!
    first_name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!

    #relations
    address: Address @hasOne
    carts: [Cart!]! @hasMany
}

type Address {
    id: ID!
    user_id: ID!
    street_number: String!
    zip_code: String!
    city: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Cart {
    id: ID!
    user_id: ID!
    product_id: ID!
    quantity: Int!
    created_at: DateTime!
    updated_at: DateTime!
}

type Product {
    id: ID!
    size: String!
    picture_id: ID!
    price: Int!
    is_available: Int!
    created_at: DateTime!
    updated_at: DateTime!

    #relations
  carts: [Cart!]! @hasMany
}